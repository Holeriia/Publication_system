[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Lera\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Lera\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.3 (Oracle Corporation Java 21.0.1)
[debug] Load.defaultLoad until apply took 114.6105ms
[debug]           Load.loadUnit: plugins took 106.3625ms
[debug]           Load.loadUnit: defsScala took 0.3444ms
[debug] [Loading] Scanning directory D:\Code_projects\Publication_system\backend\project
[debug]             Load.loadUnit: mkEval took 7.8202ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Code_projects\Publication_system\backend\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.6883 ms
[info] loading settings for project backend-build from idea.sbt ...
[debug]               Load.resolveProject(backend-build) took 43.9479ms
[debug]             Load.loadTransitive: finalizeProject(Project(id backend-build, base: D:\Code_projects\Publication_system\backend\project, plugins: List(<none>))) took 70.3538ms
[debug] [Loading] Done in D:\Code_projects\Publication_system\backend\project, returning: (backend-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3230.6674ms
[debug]           Load.loadUnit: cleanEvalClasses took 11.2958ms
[debug]         Load.loadUnit(file:/D:/Code_projects/Publication_system/backend/project/, ...) took 3355.6576ms
[debug]       Load.apply: load took 3497.1965ms
[debug]       Load.apply: resolveProjects took 6.2674ms
[debug]       Load.apply: finalTransforms took 86.6352ms
[debug]       Load.apply: config.delegates took 6.9906ms
[debug]       Load.apply: Def.make(settings)... took 467.9048ms
[debug]       Load.apply: structureIndex took 114.7134ms
[debug]       Load.apply: mkStreams took 1.3293ms
[info] loading project definition from D:\Code_projects\Publication_system\backend\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5847.9744ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory D:\Code_projects\Publication_system\backend
[debug]       Load.loadUnit: mkEval took 0.3509ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.7955 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 29.4561ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Code_projects\Publication_system\backend, plugins: List(<none>))) took 36.5195ms
[debug] [Loading] Done in D:\Code_projects\Publication_system\backend, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2138.7686ms
[debug]     Load.loadUnit: cleanEvalClasses took 40.5654ms
[debug]   Load.loadUnit(file:/D:/Code_projects/Publication_system/backend/, ...) took 8029.7714ms
[debug] Load.apply: load took 8056.9554ms
[debug] Load.apply: resolveProjects took 0.1319ms
[debug] Load.apply: finalTransforms took 42.9512ms
[debug] Load.apply: config.delegates took 0.5039ms
[debug] Load.apply: Def.make(settings)... took 110.6954ms
[debug] Load.apply: structureIndex took 41.4753ms
[debug] Load.apply: mkStreams took 0.0032ms
[info] set current project to publicationtracker (in build file:/D:/Code_projects/Publication_system/backend/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
