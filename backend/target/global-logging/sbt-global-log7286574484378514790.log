[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[info] Updated file D:\Code_projects\Publication_system\backend\project\build.properties: set sbt.version to 1.10.3
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.3 (Oracle Corporation Java 21.0.1)
[debug] Load.defaultLoad until apply took 124.3676ms
[debug]           Load.loadUnit: plugins took 140.9371ms
[debug]           Load.loadUnit: defsScala took 0.4045ms
[debug] [Loading] Scanning directory D:\Code_projects\Publication_system\backend\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Code_projects\Publication_system\backend\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.6907 ms
[debug]               Load.resolveProject(backend-build) took 61.635ms
[debug]             Load.loadTransitive: finalizeProject(Project(id backend-build, base: D:\Code_projects\Publication_system\backend\project, plugins: List(<none>))) took 120.1558ms
[debug] [Loading] Done in D:\Code_projects\Publication_system\backend\project, returning: (backend-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 153.4924ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.3657ms
[debug]         Load.loadUnit(file:/D:/Code_projects/Publication_system/backend/project/, ...) took 304.9552ms
[debug]       Load.apply: load took 577.1604ms
[debug]       Load.apply: resolveProjects took 10.2503ms
[debug]       Load.apply: finalTransforms took 84.4098ms
[debug]       Load.apply: config.delegates took 8.103ms
[debug]       Load.apply: Def.make(settings)... took 546.5703ms
[debug]       Load.apply: structureIndex took 159.4973ms
[debug]       Load.apply: mkStreams took 1.9914ms
[info] loading project definition from D:\Code_projects\Publication_system\backend\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3601.6618ms
[debug]     Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory D:\Code_projects\Publication_system\backend
[debug]       Load.loadUnit: mkEval took 5.1714ms
